# Using the node alpine image to build the React app
image: node:alpine

# Cache node modules - speeds up future builds
cache:
  paths:
  - node_modules

# Name the stages involved in the pipeline
stages:
- lint
- deploy_review
- deploy

lint:
  stage: lint
  image: node:alpine
  before_script:
    - npm install
  script:
    - npm run lint

deploy_review:
  stage: deploy_review
  only:
    - branches
  except:
    - master
  before_script:
    - npm install
  script:
    - npm run build
    - node_modules/.bin/surge ./build https://uxdc-daaas-$CI_ENVIRONMENT_SLUG.surge.sh
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://uxdc-daaas-$CI_ENVIRONMENT_SLUG.surge.sh
    on_stop: stop_review

stop_review:
  stage: deploy_review
  only:
    - branches
  except:
    - master
  script:
    - node_modules/.bin/surge teardown https://uxdc-daaas-$CI_ENVIRONMENT_SLUG.surge.sh
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  rules:
    when: manual

# Job name for gitlab to recognise this results in assets for Gitlab Pages
# https://docs.gitlab.com/ee/user/project/pages/introduction.html#gitlab-pages-requirements
pages:
  stage: deploy
  script:
    - npm install # Install all dependencies
    - npm run build --prod # Build for prod
    - cp public/index.html public/404.html # Not necessary, but helps with https://medium.com/@pshrmn/demystifying-single-page-applications-3068d0555d46
    - mv public _public # CRA and gitlab pages both use the public folder. Only do this in a build pipeline.
    - mv build public # Move build files to public dir for Gitlab Pages
  artifacts:
    paths:
    - public # The built files for Gitlab Pages to serve
  only:
    - master # Only run on master branch

storybook:
  stage: deploy
  # Export storybook as a static site (to public)
  script:
    - npm install
    - npm run build-storybook
    - node_modules/.bin/surge ./storybook-static https://uxdc-daaas-storybook.surge.sh    
  # Only run on the `storybook` branch
  only:
    - master
